version: '3'
services:
  etcd:
    image: bitnami/etcd:latest
    ports:
      - "2379:2379"
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
    networks:
      - soc

  #citus_coordinator:
  #  image: citusdata/citus:latest
  #  environment:
  #    - POSTGRES_DB=soc
  #    - POSTGRES_USER=soc_user
  #    - POSTGRES_PASSWORD=password
  #    - POSTGRES_HOST_AUTH_METHOD=trust
  #  ports:
  #    - "5432:5432"
  #  depends_on:
  #    - etcd
  #  networks:
  #    - soc

  #citus_worker_1:
  #  image: citusdata/citus:latest
  #  environment:
  #    - POSTGRES_DB=soc
  #    - POSTGRES_USER=soc_user
  #    - POSTGRES_PASSWORD=password
  #    - POSTGRES_HOST_AUTH_METHOD=trust
  #  ports:
  #    - "5433:5432"
  #  depends_on:
  #    - etcd
  #  networks:
  #    - soc

  #citus_worker_2:
  #  image: citusdata/citus:latest
  #  environment:
  #    - POSTGRES_DB=soc
  #    - POSTGRES_USER=soc_user
  #    - POSTGRES_PASSWORD=password
  #    - POSTGRES_HOST_AUTH_METHOD=trust
  #  ports:
  #    - "5434:5432"
  #  depends_on:
  #    - etcd
  #  networks:
  #    - soc

  pg:
    image: postgres:15.2-alpine
    environment:
      POSTGRES_USER: soc_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: soc
      SERVICE_NAME: pg
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_INIT_DB_ARGS: "--locale=ru_RU"
      PAGER: less
      TERM: xterm
    expose:
      - "5432"
    ports:
      - "5432:5432"
    volumes:
      - postgresql_data:/var/lib/postgresql/data
     # - ./.docker/conf/pg/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
     # - ./.docker/conf/pg/postgresql.conf:/var/lib/postgresql/data/postgresql.conf
    networks:
      - soc

  pg_replica:
    image: postgres:15.2-alpine
    environment:
      POSTGRES_USER: soc_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: soc
      SERVICE_NAME: pg_replica
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_INIT_DB_ARGS: "--locale=ru_RU"
      PAGER: less
      TERM: xterm
    ports:
      - "5433:5432"
    volumes:
      - ./.docker/conf/pgslave:/var/lib/postgresql/data
    networks:
      - soc

  pg_replica2:
    image: postgres:15.2-alpine
    environment:
      POSTGRES_USER: soc_user
      POSTGRES_PASSWORD:
      POSTGRES_DB: soc
      SERVICE_NAME: pg_replica2
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_INIT_DB_ARGS: "--locale=ru_RU"
      PAGER: less
      TERM: xterm
    ports:
      - "5434:5432"
    volumes:
      - ./.docker/conf/pgslave_2:/var/lib/postgresql/data
    networks:
      - soc

  haproxy:
    image: haproxy:latest
    container_name: haproxy
    ports:
      - "5000:5000"
      - "7000:7000"
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    depends_on:
      - pg_replica
      - pg_replica2
    networks:
      - soc

  redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - soc

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"
    depends_on:
      - app
      - app2
    networks:
      - soc

  app:
    build:
      context: .
      dockerfile: .docker/dockerfile
    environment:
      #DB_HOST: citus_coordinator
      DB_HOST: haproxy
      DB_CONNECTION: pgsql
      DB_USER: soc_user
      DB_PASSWORD: password
      DB_NAME: soc
      DB_PORT: 5000
      REDIS_HOST: redis
      REDIS_PORT: 6379
      RABBIT_HOST: rabbitmq
      RABBIT_PORT: 5672
      RABBIT_USER: guest
      RABBIT_PASSWORD: guest
    volumes:
      - ./:/app/soc:delegated
      - ./.docker/entrypoint/soc.sh:/entrypoint.sh:ro
    entrypoint: /entrypoint.sh
    ports:
      - "8085:8080"
    depends_on:
      - rabbitmq
      - redis
    networks:
      - soc

  app2:
    build:
      context: .
      dockerfile: .docker/dockerfile
    environment:
      #DB_HOST: citus_coordinator
      DB_HOST: haproxy
      DB_CONNECTION: pgsql
      DB_USER: soc_user
      DB_PASSWORD: password
      DB_NAME: soc
      DB_PORT: 5000
      REDIS_HOST: redis
      REDIS_PORT: 6379
      RABBIT_HOST: rabbitmq
      RABBIT_PORT: 5672
      RABBIT_USER: guest
      RABBIT_PASSWORD: guest
    volumes:
      - ./:/app/soc:delegated
      - ./.docker/entrypoint/soc.sh:/entrypoint.sh:ro
    entrypoint: /entrypoint.sh
    ports:
      - "8084:8080"
    depends_on:
      - rabbitmq
      - redis
    networks:
      - soc

  dialogues_app:
    build:
      context: .
      dockerfile: .docker/dialogues.dockerfile
    environment:
      RABBIT_HOST: rabbitmq
      RABBIT_PORT: 5672
      RABBIT_USER: guest
      RABBIT_PASSWORD: guest
    volumes:
      - ./:/app/soc:delegated
      - ./.docker/entrypoint/dialogues.sh:/dialogues.sh:ro
    entrypoint: /dialogues.sh
    ports:
      - "8081:8081"
    depends_on:
      - tarantool
    networks:
      - soc

  counter_app:
    build:
      context: .
      dockerfile: .docker/counter.dockerfile
    environment:
      RABBIT_HOST: rabbitmq
      RABBIT_PORT: 5672
      RABBIT_USER: guest
      RABBIT_PASSWORD: guest
    volumes:
      - ./:/app/soc:delegated
      - ./.docker/entrypoint/counter.sh:/counter.sh:ro
    entrypoint: /counter.sh
    ports:
      - "8082:8082"
    depends_on:
      - tarantool_counter
      - rabbitmq
    networks:
      - soc

  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - "rabbitmq_data:/var/lib/rabbitmq"
    networks:
      - soc

  tarantool:
    image: tarantool/tarantool:2.8.2
    ports:
      - "3301:3301"
    volumes:
      - ./.docker/entrypoint/app.lua:/app/app.lua
    command:
      - tarantool
      - /app/app.lua
    networks:
      - soc

  tarantool_counter:
    image: tarantool/tarantool:2.8.2
    ports:
      - "3302:3302"
    volumes:
      - ./.docker/entrypoint/counter.lua:/app/counter.lua
    command:
      - tarantool
      - /app/counter.lua
    networks:
      - soc

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - soc

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - soc

  zabbix-server:
    image: zabbix/zabbix-server-pgsql
    ports:
      - "10051:10051"
    environment:
      DB_SERVER_HOST: "zabbix-postgres"
      POSTGRES_USER: "zabbix"
      POSTGRES_PASSWORD: "zabbix"
    networks:
      - soc

  zabbix-web-nginx-pgsql:
    image: zabbix/zabbix-web-nginx-pgsql
    ports:
      - "8083:8080"
    environment:
      DB_SERVER_HOST: "zabbix-postgres"
      POSTGRES_USER: "zabbix"
      POSTGRES_PASSWORD: "zabbix"
      ZBX_SERVER_HOST: "zabbix-server"
    networks:
      - soc

  zabbix-postgres:
    image: postgres:alpine
    environment:
      POSTGRES_DB: "zabbix"
      POSTGRES_USER: "zabbix"
      POSTGRES_PASSWORD: "zabbix"
    volumes:
      - zabbix-postgres-data:/var/lib/postgresql/data
    networks:
      - soc

  zabbix-agent:
    image: zabbix/zabbix-agent:latest
    container_name: zabbix-agent
    ports:
      - "10050:10050"
    environment:
      ZBX_HOSTNAME: "Zabbix server"
      ZBX_SERVER_HOST: "zabbix-server"
      ZBX_SERVER_PORT: "10051"
      ZBX_ACTIVE_ALLOW: "true"
    networks:
      - soc

  zabbix-agent2:
    image: zabbix/zabbix-agent:latest
    container_name: zabbix-agent2
    ports:
      - "10053:10050"
    environment:
      ZBX_HOSTNAME: "dialogues_app"
      ZBX_SERVER_HOST: "zabbix-server"
      ZBX_SERVER_PORT: "10051"
      ZBX_ACTIVE_ALLOW: "true"
    networks:
      - soc

volumes:
  data:
  rabbitmq_data:
  grafana-data:
  zabbix-postgres-data:
  prometheus_data:
  postgresql_data:
  pg_replica_data:
  pg_replica_data2:


networks:
  soc:
